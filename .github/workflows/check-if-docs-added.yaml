name: Docs edited or not needed

on:
  pull_request:
    branches:
      - main
  workflow_call:
  
defaults:
  run:
    shell: bash

jobs:
  Docs_edited_or_not_needed:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yq (for YAML parsing)
        run: |
          sudo apt-get update
          sudo apt-get install -y yq

      # This step checks if any modified release notes contain keys indicating a 
      # feature, enhancement, or deprecation. 
      # If such keys are found, it enforces that at least one documentation (.rst) file within the 
      # docs/ directory must also be modified in the same pull request, failing the check otherwise.
      # Aka.... if there is a new feature OR a deprecation the docs MUST be edited in some way.
      - name: Check release notes for feature changes, and then require docs updates if found
        env:
          commit_hash: ${{ github.event.pull_request.base.sha }}
        run: |
          set -euo pipefail
          
          KEYS=("feature" "enhancement" "deprecation")
          CHANGED_FILES=$(git diff --name-only "$commit_hash" HEAD)
          CHANGED_FEATURE_FILES=$(echo "${CHANGED_FILES}" | grep '^sphinx/source/releases/latest/.*\.yaml$' || true) # Get release note changes
          CHANGED_DOC_FILES=$(echo "${CHANGED_FILES}" | grep '^docs/.*\.rst$' || true) # Get changed rst files in docs
      
          if [ -z "${CHANGED_FEATURE_FILES}" ]; then
            echo "No YAML files in 'sphinx/source/releases/latest/' were changed. Skipping doc check."
            exit 0
          fi
    
          IFS=$'\n'
          for file in ${CHANGED_FEATURE_FILES}; do
            KEY_FOUND=false
    
            for key in "${KEYS[@]}"; do
              key_value=$(yq e ".${key}" "$file" 2>/dev/null || true)
              if [ -n "$key_value" ] && [ "$key_value" != "null" ]; then
                KEY_FOUND=true
                break
              fi
            done
    
            if [ "$KEY_FOUND" = true ]; then
              if [ -z "${CHANGED_DOC_FILES}" ]; then
                echo "Error: The file '$file' contains a top-level key from [${KEYS[*]}], but no .rst documentation was modified in 'docs/'."
                echo "Please update the relevant .rst documentation in 'docs/' to document your changes."
                exit 1
              fi
            fi
          done
    
          echo "All changed YAML files with required keys have associated documentation changes. âœ…"
