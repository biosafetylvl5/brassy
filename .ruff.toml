# Target Python version
target-version = "py311"
line-length = 88

# Enable a wide range of rules
[lint]
select = [
    "E", "F", "W",  # pycodestyle and Pyflakes
    "I",            # isort
    "N",            # PEP8 naming
    "D",            # pydocstyle
    "UP",           # pyupgrade
    "B",            # flake8-bugbear
    "C4",           # flake8-comprehensions
    "SIM",          # flake8-simplify
    "ARG",          # flake8-unused-arguments
    "ERA",          # eradicate
    "PL",           # Pylint
    "RUF",          # Ruff-specific rules
    "TCH",          # flake8-type-checking
    "S",            # flake8-bandit (security)
    "A",            # flake8-builtins
    "COM",          # flake8-commas
    "PT",           # flake8-pytest-style
    "PTH",          # flake8-use-pathlib
    "TRY",          # tryceratops (exception handling)
]

ignore = [
    "D203",  # one-blank-line-before-class (conflicts with D211)
    "D212",  # multi-line-summary-first-line (conflicts with D213)
    "E731",  # allow variable assigned lambdas (PLEASE!!)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.pydocstyle]
convention = "numpy"

[lint.mccabe]
max-complexity = 5

[lint.flake8-tidy-imports]
ban-relative-imports = "all"

[lint.per-file-ignores]
# Allow assert statements in tests
"tests/**/*" = ["S101"]
# Ignore import violations in __init__.py files
"__init__.py" = ["F401"]

[format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Unlike Black, force unix style line endings ("\n")
line-ending = "lf"